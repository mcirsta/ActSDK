#**************************************************************************
#                                                                         *
#   PROJECT     : MIPS port for UCOS-II                                   *
#                                                                         *
#   MODULE      : MakeFile rules for building  application                *
#                                                                         *
#   AUTHOR      :                                                         *
#                                                                         *
#   PROCESSOR   : MIPS 4KEc (32 bit RISC) - Actions board                 *
#                                                                         *
#   Tool-chain  :  Cygnus                                                 *
#                                                                         *
#   DESCRIPTION :                                                         *
#   Makefile rules used for building application.                         *
#                                                                         *
#   The default target (all) builds application in two formats :          *
#   *.elf : Image in ELF format.                                          *
#   *.rec : Image in S-record format.                                     *
#                                                                         *
#   The linker also generates a MAP file "*.map".                         *
#                                                                         *
#   Other targets are :                                                   *
#   clean :    Deletes all files generated by makefile.                   *
#   depend :   Builds dependency file.                                    *
#                                                                         *
#*************************************************************************/

CC        = sde-gcc
LD        = sde-ld
OBJCOPY   = sde-objcopy
OBJDUMP   = sde-objdump
STRIP     = sde-strip

# **********************************************
# Endianness
# **********************************************

ENDIAN  = EL

ifeq ($(ENDIAN),EL)
OFORMAT = -EL
else
OFORMAT = -EB
endif

# **********************************************
# Type of Processor & Board
# **********************************************

Processor = mips

# **********************************************
# Directories
# **********************************************

CASEROOT  = $(ROOT)/case
PSPROOT   = $(ROOT)/psp_rel

INCDIR    = $(PSPROOT)/include $(PSPROOT)/include/libc \
            $(CASEROOT)/include

PSPLIBDIR    = $(PSPROOT)/lib
CASELIBDIR = $(CASEROOT)/lib

LINKDIR   = .
SRCDIR    = .

include $(PSPROOT)/config/config.cfg
include $(CASEROOT)/include/case.xn

# **********************************************
# Image file names and map file
# **********************************************

IMAGE_ELF = $(IMAGENAME).app
IMAGE_LST = $(IMAGENAME).lst
MAP       = $(IMAGENAME).map

# **********************************************
# API Lib files
# **********************************************

LIBCRT    = $(PSPLIBDIR)/libcrt/crti.o $(PSPLIBDIR)/libcrt/crtbegin.o $(PSPLIBDIR)/libcrt/crtbegin1.o $(PSPLIBDIR)/libcrt/crtend1.o $(PSPLIBDIR)/libcrt/crtend.o $(PSPLIBDIR)/libcrt/crtn.o 

LIBCASE += $(CASELIBDIR)/commonui_api.a $(CASELIBDIR)/style_api.a \
           $(CASELIBDIR)/fusion_api.a $(CASELIBDIR)/applib_api.a

LIBPSP += $(PSPLIBDIR)/libcom.a  $(LIBCRT) $(PSPLIBDIR)/ime_api.a $(PSPLIBDIR)/mlang_api.a $(PSPLIBDIR)/mnavi_api.a \
         $(PSPLIBDIR)/plist_api.a $(PSPLIBDIR)/sqlite_api.a \
         $(PSPLIBDIR)/libc_sys_api.a $(PSPLIBDIR)/libc_fs_api.a $(PSPLIBDIR)/libc/libc_sysindep.a \
         $(PSPLIBDIR)/gui_api.a  $(PSPLIBDIR)/mmm_api.a $(PSPLIBDIR)/transimage.a $(PSPLIBDIR)/apconfig_api.a \
         $(PSPLIBDIR)/syscall_api.a $(PSPLIBDIR)/kmodule_api.a  

LIBOBJ = $(LIBCASE) $(LIBPSP)

# **********************************************
# print options
# **********************************************

print= err

PRINT_ERR = -DPRINT_ERR=0
PRINT_WARN = -DPRINT_WARN=0
PRINT_DBG = -DPRINT_DBG=0
PRINT_INFO = -DPRINT_INFO=0
PRINT_TIME = -DPRINT_TIME=0

ifeq ($(print),all)
PRINT_ERR = -DPRINT_ERR=1
PRINT_WARN = -DPRINT_WARN=1
PRINT_DBG = -DPRINT_DBG=1
PRINT_INFO = -DPRINT_INFO=1
PRINT_TIME = -DPRINT_TIME=1
endif

ifeq ($(print),off)
PRINT_ERR = -DPRINT_ERR=1
PRINT_WARN = -DPRINT_WARN=0
PRINT_DBG = -DPRINT_DBG=0
PRINT_INFO = -DPRINT_INFO=0
PRINT_TIME = -DPRINT_TIME=0
endif

ifeq ($(findstring err, $(print)), err)
PRINT_ERR = -DPRINT_ERR=1
endif

ifeq ($(findstring warn, $(print)), warn)
PRINT_WARN = -DPRINT_WARN=1
endif

ifeq ($(findstring dbg, $(print)), dbg)
PRINT_DBG = -DPRINT_DBG=1
endif

ifeq ($(findstring info, $(print)), info)
PRINT_INFO = -DPRINT_INFO=1
endif

ifeq ($(findstring time, $(print)), time)
PRINT_TIME = -DPRINT_TIME=1
endif

PRINT_OPT = $(PRINT_ERR) $(PRINT_WARN) $(PRINT_DBG) $(PRINT_INFO) $(PRINT_TIME)

# **********************************************
# Compiler and linker options
# **********************************************

INCLUDE   = $(foreach dir, $(INCDIR), -I$(dir))
LINCLUDE = -L$(CASEROOT)/include -L$(PSPROOT)/include/xn

CC_OPTS   = -g -O2 -G0 -Wall -Wno-unknown-pragmas $(INCLUDE) -fsigned-char -mtune=24kec -mips32r2 -fno-builtin $(OFORMAT) $(PRINT_OPT)

CC_OPTS_A = $(CC_OPTS) -D_ASSEMBLER_

LD_SCRIPT = exe.xn

LD_OPTS_1   = $(LINCLUDE) -g -G 0 -T $(LD_SCRIPT) $(OFORMAT) --section-start .init=$(VADDR) 
LD_OPTS_2   = -o $(IMGDIR)/$(IMAGE_ELF) -Map $(MAP)

ifeq ($(GUI_FONT_TYPE), 1)
	CC_OPTS += -DGUI_FONT_BITMAP
else
	CC_OPTS += -DGUI_FONT_TTF
endif

# **********************************************
# Files to be compiled
# **********************************************
SRCDIR  = ./

SRC_C  = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.c))
SRC_S  = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.S))

OBJ_C  = $(notdir $(patsubst %.c, %.o, $(SRC_C)))
OBJ_S  = $(notdir $(patsubst %.S, %.o, $(SRC_S)))
OBJ  = $(OBJ_C) $(OBJ_S)

# **********************************************
# Rules
# **********************************************

.PHONY : all
all : $(IMAGE_ELF)

$(IMAGE_ELF) : $(OBJ)
	$(LD) $(LD_OPTS_1) $(OBJ) $(notdir $(OBJ_COM)) $(LIBOBJ) $(LD_OPTS_2)
	@echo ¹§Ï²Äú,±àÒë³É¹¦£¡£¨Ð¡¶Ë£©
	sde-objdump -D $(IMGDIR)/$(IMAGE_ELF) > $(IMAGE_LST)
	rm *.o

$(OBJ_C) : %.o : %.c 
	$(CC) $(CC_OPTS) -c $< -o $@

$(OBJ_S) : %.o : %.S
	$(CC) $(CC_OPTS_A) -c $< -o $@

.PHONY : clean depend strip

strip :
	$(STRIP) -S $(IMGDIR)/$(IMAGE_ELF)
	$(STRIP) -R .pdr -R .comment -R .symtab -R .strtab -R .reginfo $(IMGDIR)/$(IMAGE_ELF)

clean :
	rm -f $(LINKDIR)/*.o $(IMGDIR)/$(IMAGE_ELF) $(IMAGE_LST) $(MAP)
	
depend :
	$(CC) $(INCLUDE) -M $(SRC) $(SRC_COM) > $(LINKDIR)/depend.mk

-include depend.mk

