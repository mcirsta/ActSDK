#**************************************************************************
#                                                                         *
#   PROJECT     : MIPS port for UCOS-II                                   *
#                                                                         *
#   MODULE      : MakeFile                                                *
#                                                                         *
#   AUTHOR      :                                                         *
#                                                                         *
#   PROCESSOR   : MIPS 4KEc (32 bit RISC) - Actions board                 *
#                                                                         *
#   Tool-chain  :  Cygnus                                                 *
#                                                                         *
#   DESCRIPTION :                                                         *
#   Makefile used for building application.                               *
#                                                                         *
#   The default target (all) builds application in two formats :          *
#   *.elf : Image in ELF format.                                          *
#   *.rec : Image in S-record format.                                     *
#                                                                         *
#   The linker also generates a MAP file "*.map".                         *
#                                                                         *
#   Other targets are :                                                   *
#   clean :    Deletes all files generated by makefile.                   *
#   depend :   Builds dependency file.                                    *
#                                                                         *
#*************************************************************************/

CC        = sde-gcc
LD        = sde-ld
OBJCOPY   = sde-objcopy
OBJDUMP   = sde-objdump

# **********************************************
# Endianness
# **********************************************

ENDIAN  = EL

ifeq ($(ENDIAN),EL)
OFORMAT = -EL
else
OFORMAT = -EB
endif

# **********************************************
# Name of application
# **********************************************

IMAGENAME = config

# **********************************************
# Type of Processor & Board
# **********************************************

Processor = mips

# **********************************************
# Directories
# **********************************************
ROOT      = ../../../../../..
SDKROOT   = $(ROOT)/psp_rel
LIBDIR    = $(SDKROOT)/lib
CASEROOT  = $(ROOT)/case
TESTLIB   = $(SDKROOT)/lib/libutest
TESTSRC   = $(CASEROOT)/apps/example/music

INCDIR    = $(SDKROOT)/include $(SDKROOT)/include/sys \
				$(TESTSRC)

IMGDIR    = $(CASEROOT)/images/apps
SDKLIB    = $(SDKROOT)/lib
CASELIB   = $(CASEROOT)/lib
LINKDIR   = .
SRCDIR    = .
VPATH     = .

include $(SDKROOT)/config/config.cfg
include $(CASEROOT)/include/case.xn

# **********************************************
# Image file names and map file
# **********************************************

IMAGE_ELF = $(IMAGENAME).app
IMAGE_LST = $(IMAGENAME).lst
MAP       = $(IMAGENAME).map

# **********************************************
# API Lib files
# **********************************************

TESTMODULE = music

LIBCRT    = $(LIBDIR)/libcrt/crti.o $(LIBDIR)/libcrt/crtbegin.o $(LIBDIR)/libcrt/crtbegin1.o $(LIBDIR)/libcrt/crtend1.o $(LIBDIR)/libcrt/crtend.o $(LIBDIR)/libcrt/crtn.o
LIBCPOSIX = $(LIBDIR)/libc_sys_api.a
#LIBCFS    = $(LIBDIR)/libc_fs_api.a

LIBUT     = $(LIBDIR)/libutest/libcunit.a
LIBSHT    = $(LIBDIR)/libsemihosting/libsemihosting.a

LIBOBJ = $(LIBCRT) $(LIBCRT_EXE) $(LIBCPOSIX) $(LIBUT) \
         $(LIBDIR)/syscall_api.a $(LIBDIR)/kmodule_api.a $(LIBSHT)

# **********************************************
# Compiler and linker options
# **********************************************
INCLUDE   = $(foreach dir, $(INCDIR), -I$(dir))
LINCLUDE = -L$(CASEROOT)/include -L$(SDKROOT)/include/xn
#-DMEMTRACE  -DCUNIT_BUILD_TESTS
USERDEF   = -D__TESTENV__=1 -DSUPPORT_API
#USERDEF   = -D__TESTENV__=1
COVFLAG   =

#CC_OPTS   = -g -c -G0 -fPIC -O0 $(OFORMAT) $(INCLUDE)  -mips32
CC_OPTS   = -g -O0 -G0 $(INCLUDE) -fsigned-char -mtune=4kec -mips32r2 -fno-builtin $(OFORMAT) $(USERDEF)

CC_OPTS_A = $(CC_OPTS) -D_ASSEMBLER_

LD_SCRIPT = exe.xn

LD_OPTS_1   = $(LINCLUDE) -g -G 0 -T $(LD_SCRIPT) $(OFORMAT) --section-start .init=$(CONFIG_VADDR)
LD_OPTS_2   = -o $(IMGDIR)/$(IMAGE_ELF) -Map $(MAP)

ifeq ($(GUI_FONT_TYPE), 1)
	CC_OPTS += -DGUI_FONT_BITMAP
else
	CC_OPTS += -DGUI_FONT_TTF
endif

# **********************************************
# Files to be compiled
# **********************************************
SRC_COM=$(TESTSRC)/test_value.c
SRC_COV =
SRC_C  = $(wildcard *.c)
SRC_S  =
SRC    = $(SRC_COV) $(SRC_C) $(SRC_S)

OBJ_COV = $(SRC_COV:.c=.o)
OBJ_C  = $(SRC_C:.c=.o) 
OBJ_S  = $(SRC_S:.S=.o)
OBJ    = $(OBJ_COV) $(OBJ_C) $(OBJ_S)
OBJ_COM= $(SRC_COM:.c=.o)
# **********************************************
# Rules
# **********************************************

.PHONY : all
all : $(IMAGE_ELF)

$(IMAGE_ELF) : $(OBJ) $(OBJ_COM)
	$(LD) $(LD_OPTS_1) $(OBJ) $(notdir $(OBJ_COM)) $(LIBOBJ) $(LD_OPTS_2)
	@echo ¹§Ï²Äú,±àÒë³É¹¦£¡£¨Ð¡¶Ë£©
	$(OBJDUMP) -D $(IMGDIR)/$(IMAGE_ELF) > $(IMAGE_LST)
#	sde-ar rcs $(IMAGENAME).a $(OBJ)  #combine all object file to a lib file
	rm *.o

$(OBJ_COV) : %.o : %.c
	$(CC) $(COVFLAG) $(CC_OPTS) -c $< -o $@

$(OBJ_C) : %.o : %.c
	$(CC) $(CC_OPTS) -c $< -o $@

$(OBJ_S) : %.o : %.S
	$(CC) $(CC_OPTS_A) -c $< -o $@

$(OBJ_COM) : %.o : %.c
	$(CC) $(CC_OPTS) -c $< -o $(notdir $@)

.PHONY : clean depend

clean :
	rm -f $(OBJ) $(SRCDIR)/*.o $(LINKDIR)/*.gcda  $(LINKDIR)/*.lst $(LINKDIR)/*.map

depend :
	$(CC) $(INCLUDE) -M $(SRC) $(SRC_COM) > $(LINKDIR)/depend.mk


-include depend.mk

