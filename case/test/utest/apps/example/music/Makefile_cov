#**************************************************************************
#                                                                         *
#   PROJECT     : MIPS port for UCOS-II                                   *
#                                                                         *
#   MODULE      : MakeFile                                                *
#                                                                         *
#   AUTHOR      :                                                         *
#                                                                         *
#   PROCESSOR   : MIPS 4KEc (32 bit RISC) - Actions board                 *
#                                                                         *
#   Tool-chain  :  Cygnus                                                 *
#                                                                         *
#   DESCRIPTION :                                                         *
#   Makefile used for building application.                               *
#                                                                         *
#   The default target (all) builds application in two formats :          *
#   *.elf : Image in ELF format.                                          *
#   *.rec : Image in S-record format.                                     *
#                                                                         *
#   The linker also generates a MAP file "*.map".                         *
#                                                                         *
#   Other targets are :                                                   *
#   clean :    Deletes all files generated by makefile.                   *
#   depend :   Builds dependency file.                                    *
#                                                                         *
#*************************************************************************/

CC        = sde-gcc
LD        = sde-ld
OBJCOPY   = sde-objcopy
OBJDUMP   = sde-objdump

# **********************************************
# Endianness
# **********************************************

ENDIAN  = EL

ifeq ($(ENDIAN),EL)
OFORMAT = -EL
else
OFORMAT = -EB
endif

# **********************************************
# Name of application
# **********************************************

IMAGENAME = music

# **********************************************
# Type of Processor & Board
# **********************************************

Processor = mips

# **********************************************
# Directories
# **********************************************
ROOT      = ./../../../../../..
CASEROOT  = $(ROOT)/case
TASKROOT  = $(CASEROOT)/apps
SDKROOT   = $(ROOT)/psp_rel
GUIROOT   = $(SDKROOT)/gui

INCDIR    = $(SDKROOT)/include $(SDKROOT)/include/libc $(SDKROOT)/include/gui \
            $(CASEROOT)/include

IMGDIR    = $(CASEROOT)/images/apps/music
LIBDIR    = $(SDKROOT)/lib

CASELIBDIR = $(CASEROOT)/lib
LINKDIR   = $(CASEROOT)/apps/example/music
SRCDIR    = $(CASEROOT)/apps/example/music
VPATH     = $(CASEROOT)/apps/example/music

include $(SDKROOT)/config/config.cfg
include $(CASEROOT)/include/case.xn

# **********************************************
# Image file names and map file
# **********************************************

IMAGE_ELF = $(IMAGENAME).app
IMAGE_LST = $(IMAGENAME).lst
MAP       = $(IMAGENAME).map

# **********************************************
# API Lib files
# **********************************************
LIBCRT    = $(LIBDIR)/libcrt/crti.o $(LIBDIR)/libcrt/crtbegin.o $(LIBDIR)/libcrt/crtbegin1.o $(LIBDIR)/libcrt/crtend1.o $(LIBDIR)/libcrt/crtend.o $(LIBDIR)/libcrt/crtn.o 
LIBCPOSIX = $(LIBDIR)/libc_sys_api.a
LIBCFS    = $(LIBDIR)/libc_fs_api.a

LIBOBJ = $(LIBCRT) $(LIBCRT_EXE) $(CASELIBDIR)/applib.a $(CASELIBDIR)/commonui.a $(CASELIBDIR)/style_api.a $(LIBCPOSIX) $(LIBCFS) \
         $(LIBDIR)/libutest/libcov.a $(LIBDIR)/libsemihosting/libsemihosting.a \
         $(LIBDIR)/syscall_api.a $(LIBDIR)/kmodule_api.a $(LIBDIR)/gui_api.a

# **********************************************
# Compiler and linker options
# **********************************************
INCLUDE   = $(foreach dir, $(INCDIR), -I$(dir))
LINCLUDE = -L$(CASEROOT)/include -L$(SDKROOT)/include/xn

COV_FLAG = -fprofile-arcs -ftest-coverage -D__COVTEST__
CC_OPTS   = $(COV_FLAG) -g -O0 -G0 $(INCLUDE) -fsigned-char -mtune=4kec -mips32r2 -fno-builtin $(OFORMAT)

CC_OPTS_A = $(CC_OPTS) -D_ASSEMBLER_

LD_SCRIPT = exe.xn

LD_OPTS_1   = $(LINCLUDE) -g -G 0 -T $(LD_SCRIPT) $(OFORMAT) --section-start .init=$(LOGO_VADDR) 
LD_OPTS_2   = -o $(IMGDIR)/$(IMAGE_ELF) -Map $(MAP)

# **********************************************
# Files to be compiled
# **********************************************
#SRCDIR  = ./

SRC_C  = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.c))
SRC_S  = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.S))

OBJ_C  = $(notdir $(patsubst %.c, %.o, $(SRC_C)))
OBJ_S  = $(notdir $(patsubst %.S, %.o, $(SRC_S)))
OBJ  = $(OBJ_C) $(OBJ_S)
# **********************************************
# Rules
# **********************************************

.PHONY : all
all : $(IMAGE_ELF)

$(IMAGE_ELF) : $(OBJ)
	$(LD) $(LD_OPTS_1) $(OBJ) $(notdir $(OBJ_COM)) $(LIBOBJ) $(LD_OPTS_2)
	@echo ¹§Ï²Äú,±àÒë³É¹¦£¡£¨Ð¡¶Ë£©
	sde-objdump -D $(IMGDIR)/$(IMAGE_ELF) > $(IMAGE_LST)
#	sde-ar rcs $(IMAGENAME).a $(OBJ)  #combine all object file to a lib file
	rm *.o

$(OBJ_C) : %.o : %.c 
	$(CC) $(CC_OPTS) -c $< -o $@

$(OBJ_S) : %.o : %.S
	$(CC) $(CC_OPTS_A) -c $< -o $@

.PHONY : clean depend

clean :
	rm -f $(LINKDIR)/*.o $(IMGDIR)/$(IMAGE_ELF) $(IMAGE_LST) $(MAP) *.gcda *.gcno
	
depend :
	$(CC) $(INCLUDE) -M $(SRC) $(SRC_COM) > $(LINKDIR)/depend.mk

-include depend.mk

