#**************************************************************************
#                                                                         *
#   PROJECT     : MIPS port for UCOS-II                                   *
#                                                                         *
#   MODULE      : MakeFile                                                *
#                                                                         *
#   AUTHOR      :                                          *
#                                                                         *
#   PROCESSOR   : MIPS 4KEc (32 bit RISC) - Actions board                 *
#                                                                         *
#   Tool-chain  :  Cygnus                                            *
#                                                                         *
#   DESCRIPTION :                                                         *
#   Makefile used for building application.                               *
#                                                                         *
#   The default target (all) builds application in two formats :          *
#   *.elf : Image in ELF format.                                          *
#   *.rec : Image in S-record format.                                     *
#                                                                         *
#   The linker also generates a MAP file "*.map".                         *
#                                                                         *
#   Other targets are :                                                   *
#   clean :    Deletes all files generated by makefile.                   *
#   depend :   Builds dependency file.                                    *
#                                                                         *
#*************************************************************************/

CC        = sde-gcc
LD        = sde-ld
OBJCOPY   = sde-objcopy
OBJDUMP   = sde-objdump

# **********************************************
# Endianness
# **********************************************

ENDIAN  = EL

ifeq ($(ENDIAN),EL)
OFORMAT = -EL
else
OFORMAT = -EB
endif
# **********************************************
# Name of application
# **********************************************

IMAGENAME = ada

# **********************************************
# Type of Processor & Board
# **********************************************

Processor = mips

# **********************************************
# Directories
# **********************************************
ROOT      = ./../../..
CASEROOT  = $(ROOT)/case
SDKROOT   = $(ROOT)/sdk
LIBROOT   = $(SDKROOT)/lib
TESTLIB   = $(SDKROOT)/lib/libutest
SRCDIR    = .

INCDIR    = $(SDKROOT)/include
BINDIR    = $(CASEROOT)/images/$(DIRNAME)

LINKDIR   = .

VPATH     = $(SRCDIR)
include $(INCDIR)/SDKConfig
include $(CASEROOT)/include/case.xn

# **********************************************
# Image file names and map file
# **********************************************
IMAGE_ELF = $(IMAGENAME).ko
IMAGE_LST = $(IMAGENAME).lst
MAP       = $(IMAGENAME).map
FULL_NAME = $(IMAGE_ELF)
# **********************************************
# Compiler and linker options
# **********************************************
INCLUDE   = -I$(SDKROOT)/include -I$(CASEROOT)/include -I$(SRCDIR)/include -I$(SDKROOT)/inc
LINCLUDE = -L$(CASEROOT)/include -L$(SDKROOT)/include/xn

COVFLAGS = -fprofile-arcs -ftest-coverage
CC_OPTS   = -g -c -G0 -O0 $(OFORMAT) $(INCLUDE) -fsigned-char -mtune=4kec -mips32r2 -Wall -DKBUILD_MODNAME=$(FULL_NAME) -nostdinc -fno-builtin
USERDEF   = -D__UNITTEST__ -D__COVTEST__
CC_OPTS_A = $(CC_OPTS) -D_ASSEMBLER_
LD_SCRIPT = ko_cov.xn
LD_OPTS   = -G0 $(LINCLUDE) -T $(LD_SCRIPT) -Ttext $(ADA_VADDR) -o $(BINDIR)/$(IMAGE_ELF)   -Map $(MAP) $(OFORMAT)

# **********************************************
# Files to be compiled
# **********************************************
SRC_C  = 
SRC_COV  = $(wildcard *.c)
SRC_S  = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.S))
SRC    = $(SRC_COV) $(SRC_C) $(SRC_S)

OBJ_COV  = $(notdir $(patsubst %.c, %.o, $(SRC_COV)))
OBJ_C  = $(notdir $(patsubst %.c, %.o, $(SRC_C)))
OBJ_S  = $(notdir $(patsubst %.S, %.o, $(SRC_S)))
OBJ    = $(OBJ_COV) $(OBJ_C) $(OBJ_S)


# **********************************************
# Rules
# **********************************************
.PHONY : all
all : $(IMAGE_ELF)

$(IMAGE_ELF) : $(OBJ)
	$(LD) $(OBJ) $(TESTLIB)/libcov.a $(LIBROOT)/syscall_api.a $(LIBROOT)/kmodule_api.a $(LIBROOT)/libsemihosting/libsemihosting.a $(LD_OPTS)
	$(OBJDUMP) -D $(BINDIR)/$(IMAGE_ELF) > $(IMAGE_LST)
	rm $(LINKDIR)/*.o

$(OBJ_COV) : %.o : %.c
	$(CC) $(INCLUDE) $(CC_OPTS) $(USERDEF) $(COVFLAGS) -o $@ $<
$(OBJ_C) : %.o : %.c
	$(CC) $(INCLUDE) $(CC_OPTS) $(USERDEF) -o $@ $<
$(OBJ_S) : %.o : %.S
	$(CC) $(INCLUDE) $(CC_OPTS_A) -o $@ $<


.PHONY : clean depend

clean :
	rm -f $(BINDIR)/$(IMAGENAME).* $(BINDIR)/depend.mk
	rm $(LINKDIR)/*.lst $(LINKDIR)/*.map $(LINKDIR)/*.o $(LINKDIR)/*.gcno $(LINKDIR)/*.gcda

depend :
	$(CC) $(INCLUDE) -M $(SRC) > $(BINDIR)/depend.mk


-include depend.mk
